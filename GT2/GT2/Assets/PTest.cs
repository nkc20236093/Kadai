using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Photon.Pun;
using Photon.Realtime;

public class PTest : MonoBehaviourPunCallbacks
{
    public int sc1 = 0;     //サーバーの点数
    public int sc2 = 0;     //クライアントの点数
    public bool ServerFlg;

    public void Login(string ip, bool sf)
    {
        //IPアドレスの設定
        PhotonNetwork.PhotonServerSettings.AppSettings.Server = ip;
        //ポート番号の設定
        PhotonNetwork.PhotonServerSettings.AppSettings.Port = 5055;
        //ネットワークへの接続
        PhotonNetwork.ConnectUsingSettings();
        ServerFlg = sf;
    }

    // サーバーへの接続が成功した時
    public override void OnConnectedToMaster()
    {
        //ルームが無ければ作成してからルーム参加する
        PhotonNetwork.JoinOrCreateRoom("room", new RoomOptions(), TypedLobby.Default);
    }

    // ルームに入ったとき時
    public override void OnJoinedRoom()
    {
        // ランダムな位置にネットワークオブジェクトを生成する
        var v = new Vector3(Random.Range(-3f, 3f), Random.Range(-3f, 3f), 0);
        GameObject go = PhotonNetwork.Instantiate("Player", v, Quaternion.identity);
        //サーバーなら赤、クライアントなら青にする
        if (ServerFlg)
        {
            go.GetComponent<Renderer>().material.color = Color.red;
        }
        else
        {
            go.GetComponent<Renderer>().material.color = Color.blue;
        }
    }

    float TimerCount = 0; //時間のカウンタ
    private void Update()
    {
        //サーバーのときのみ
        if (ServerFlg)
        {
            //時間のカウント
            TimerCount += Time.deltaTime;
            //５秒経過したらSohereを作成する
            if (TimerCount > 5)
            {
                TimerCount = 0;
                //ネットワークオブジェクトのSphereをランダムの位置に配置する
                var v = new Vector3(Random.Range(-3f, 3f), Random.Range(-3f, 3f), 0);
                GameObject go = PhotonNetwork.Instantiate("Sphere", v, Quaternion.identity);
            }
        }
    }
}