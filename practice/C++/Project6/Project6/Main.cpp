#include <iostream>
using namespace std;

//関数宣言（プロトタイプ宣言）
//中身は別で書く。関数の形を同じ名前で宣言
//引数の名前は省略できる
int function(int, int);
void function2(int);

//グローバル変数
//関数の外にある変数がグローバル変数
//関数の中にある変数がローカル変数(自動変数)
//グローバル変数はプログラム実行時に生成され、
//プログラム終了時に消去される
int gx = 0;

int main()
{
    //メイン関数（必須）
    int a = 10, b = 20, c;

    //スタティック変数
    //これも生成されてから、消去されない
    static int sx = 0;
    // aとbを使った値をcに入れたい
    c = function(a, b);
    cout << "cの値は" << c << "です\n";

    //関数2の呼び出し
    //関数2にはcの値のみを渡す（値渡し）
    //なので、関数2でどんな処理をしても
    //cの値は変更されない
    function2(c);
    cout << "cの値は" << c << "です\n";
}

//関数
//返却値型　関数名（引数）{ }
//上記の形で関数は作成される
//返却値型…関数は値を返すので、どの型を返すか
//関数名…好きな名前を付けてok
//引数…関数を呼び出す際に渡す値（なくてもok）
int function(int x, int y)
{
    return x + y;    //returnで値を返却する
}

//関数2
//戻り値 void (戻り値なし。returnしなくていい)
//引き数　整数型のx
//内容 xに100を入れる
void function2(int x)
{
    x = 100;
    gx = x;
}